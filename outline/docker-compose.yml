version: "3.2"

networks:
  outline:

volumes:
  database-data:
  https-portal-data:
  storage-data:

services:
  outline:
    container_name: outline
    image: docker.getoutline.com/outlinewiki/outline:0.72.0
    env_file: ./.env
    networks:
      - outline
    ports:
      - "8005:3000"
    volumes:
      - storage-data:/var/lib/outline/data
    depends_on:
      - postgres
      - redis

  postgres:
    container_name: outline_postgres
    image: postgres:16-alpine
    env_file: ./.env
    networks:
      - outline
    ports:
      - "8006:5432"
    volumes:
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "outline", "-U", "user"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'pass'
      POSTGRES_DB: 'outline'

  redis:
    container_name: outline_redis
    image: redis:7.2.5-alpine
    env_file: ./.env
    networks:
      - outline
    ports:
      - "8007:6379"
    volumes:
      - ./redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 30s
      interval: 10s

  https-portal:
    container_name: outline_ssl
    image: steveltn/https-portal:1
    env_file: ./.env
    networks:
      - outline
    ports:
      - '8008:80'  # HTTP
      - '8009:443' # HTTPS
    links:
      - outline
    volumes:
      - https-portal-data:/var/lib/https-portal
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      retries: 3
      timeout: 20s
      interval: 30s
    environment:
      DOMAINS: 'docs.outline.com -> http://outline:8005'
      STAGE: 'production'
      WEBSOCKET: 'true'
      CLIENT_MAX_BODY_SIZE: '0'
    restart: always
